{"ast":null,"code":"import _classCallCheck from \"/Users/elielder/workspace/design-assessment/eli-design-assessment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elielder/workspace/design-assessment/eli-design-assessment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elielder/workspace/design-assessment/eli-design-assessment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elielder/workspace/design-assessment/eli-design-assessment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elielder/workspace/design-assessment/eli-design-assessment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elielder/workspace/design-assessment/eli-design-assessment/src/App.tsx\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport LeftNav from './components/LeftNav';\nimport ColorPage from './components/ColorPage';\nimport { BrowserRouter } from 'react-router-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      colors: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:4000/colors/').then(function (res) {\n        _this2.setState({\n          colors: res.data\n        });\n\n        console.log('res', res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // callBackend = async () => {\n    //   console.log('1')\n    //   const response = await fetch('/backend');\n    //   console.log('2')\n    //   console.log(response);\n    //   const body = await response.json();\n    //   console.log('3')\n    //   console.log('res', response);\n    //   if (response.status !== 200) {\n    //     console.log('4')\n    //     throw Error(body.message);\n    //   }\n    //   return body;\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: \"New Engen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(LeftNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(ColorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.colors))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/elielder/workspace/design-assessment/eli-design-assessment/src/App.tsx"],"names":["React","Component","axios","Header","LeftNav","ColorPage","BrowserRouter","App","props","state","colors","get","then","res","setState","data","console","log","catch","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;IAcMC,G;;;;;AACJ,eAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAHwB;AAMzB;;;;wCAEmB;AAAA;;AAClBR,MAAAA,KAAK,CAACS,GAAN,CAAU,+BAAV,EACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACb,QAAA,MAAI,CAACC,QAAL,CAAc;AACZJ,UAAAA,MAAM,EAAEG,GAAG,CAACE;AADA,SAAd;;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAG,CAACE,IAAvB;AACD,OANH,EAQGG,KARH,CAQS,UAAAC,GAAG;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,OARZ;AASD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;6BAES;AACP,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWC,MADd,CAHF,CAFF,CADF,CADF;AAcD;;;;EApDeT,S;;AAuDlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport LeftNav from './components/LeftNav';\nimport ColorPage from './components/ColorPage';\nimport { BrowserRouter } from 'react-router-dom';\n\ninterface Props {\n\n}\ninterface State {\n  colors: Color[];\n}\n\nexport interface Color {\n  hexCode: string,\n  colorType: string,\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      colors: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/colors/')\n      .then((res) => {\n        this.setState({\n          colors: res.data\n        })\n        console.log('res', res.data)\n      })\n\n      .catch(err => console.log(err));\n  }\n\n  // callBackend = async () => {\n  //   console.log('1')\n  //   const response = await fetch('/backend');\n  //   console.log('2')\n  //   console.log(response);\n  //   const body = await response.json();\n  //   console.log('3')\n  //   console.log('res', response);\n  //   if (response.status !== 200) {\n  //     console.log('4')\n  //     throw Error(body.message);\n  //   }\n\n  //   return body;\n  // }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header title='New Engen' />\n          <div className='App-body'>\n            <LeftNav />\n            <ColorPage />\n            <div>\n              {this.state.colors}\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}